                        ------------------------
                        Mt Wilson API Quickstart
                        ------------------------
                        ------------------------
                        2012-09-21
                        ------------------------

Background

    You can easily integrate with Mt Wilson using the provided API for Java and 
for .NET. The API package is a single file that you link to your project. The
Java API also includes a command line utility.

    Before you can make any API calls into Mt Wilson, you need to obtain access.
This guide will show you how to register with Mt Wilson and how to make API
calls after your registration is approved. 

    <NOTE: Registration is a premium feature. Users of Mt Wilson core can skip
the registration step and proceed directly to using non-authenticated API's.>

    Each section of this guide contains sample code for Java, .NET, and Linux
shell environments.

    Refer to the Configuration Guide for details on all the possible options
supported by the API, and to the full API Documentation for details on
all the available methods.

Registration

    The following code will create a keystore "test1.jks" in your home directory.
The keystore contains an RSA keypair that is used to authenticate your API
calls to Mt Wilson. It also contains the Mt Wilson SSL certificate and SAML
signing certificate, which are downloaded from the server.

* Java

+---
File directory = new File(System.getProperty("user.home", "."));
String username = "test1"; // you choose a username
String password = "changeit"; // you choose a password
URL server = new URL("https://mtwilson.example.com"); // your Mt Wilson server
String[] roles = new String[] { "Attestation", "Whitelist" };
KeystoreUtil.createUserInDirectory(directory, username, password, server, roles);
+---

* .NET

* Linux Shell

+---
java -jar mtwilson-api.jar \
  -Dmtwilson.api.keystore=/path/to/test1.jks \
  -Dmtwilson.api.keystore.password=changeit \
  -Dmtwilson.api.key.alias=test1 \
  -Dmtwilson.api.key.password=changeit \
  -Dmtwilson.api.baseurl=https://mtwilson.example.com \
  CreateUser roles=Attestation,Whitelist
+---

Using the API

    After your registration is approved, you can use the API to access all the
features Mt Wilson provides such as maintaining a whitelist, adding hosts,
and obtaining a trust assertion on one or more hosts.

    To use the API, you need to create an ApiClient object configured with
your credentials and your Mt Wilson server, then use it to send requests
to the Mt Wilson server.

    Notice that the variables directory, username, password, and servers are 
the same as what you used during registration.

* Java

    All Java examples in this guide assume that you have created an ApiClient object called
"api". You can use the sample code below to create this object.

+---
File directory = new File(System.getProperty("user.home", "."));
String username = "test1"; // username created during registration
String password = "changeit"; // password created during registration
URL server = new URL("https://10.1.71.212:8181"); // your Mt Wilson server
ApiClient api = KeystoreUtil.clientForUserInDirectory(directory, username, password, server);
+---

* .NET

    All .NET examples in this guide assume that you have created an ApiClient object called
"api". You can use the sample code below to create this object.

* Linux Shell

    All command line examples in this guide assume that you provide parameters
to configure the client as shown here. They are omitted from the other examples
for brevity but you need to include them in each command. It may be convenient
to write a wrapper around it to supply the configuration each time.

    In this example, the term "command" should be replaced with the API you want
to call and the term "options..." should be replaced with options specific
to that command, if any.

+---
java -jar mtwilson-api.jar \
  -Dmtwilson.api.keystore=/path/to/test1.jks \
  -Dmtwilson.api.keystore.password=changeit \
  -Dmtwilson.api.key.alias=test1 \
  -Dmtwilson.api.key.password=changeit \
  -Dmtwilson.api.baseurl=https://mtwilson.example.com \
  command options...
+---

    Here is an example of a wrapper for Linux operating systems, which will be
referred to as "mtwilson-api" in the following examples.

+---
#!/bin/sh
java -jar mtwilson-api.jar \
  -Dmtwilson.api.keystore=/path/to/test1.jks \
  -Dmtwilson.api.keystore.password=changeit \
  -Dmtwilson.api.key.alias=test1 \
  -Dmtwilson.api.key.password=changeit \
  -Dmtwilson.api.baseurl=https://mtwilson.example.com \
  $@
+---

Trust Assertions in SAML

    If you already have hosts registered with Mt Wilson, you can request a trust
assertion in SAML format using "getSamlForHost". You can verify the signature
on the assertion and get easy access to the details using "verifyTrustAssertion".

* Java

+---
String saml = api.getSamlForHost(new Hostname("192.168.1.100"));
TrustAssertion trust = api.verifyTrustAssertion(saml);
X509Certificate aik = trust.getAikCertificate();
Date issued = trust.getDate();
String issuer = trust.getIssuer();
String hostname = trust.getSubject();
for(String attr : trust.getAttributeNames()) {
    String signedAttribute = trust.getStringAttribute(attr);
}
+---

* .NET

* Linux Shell

    You can obtain and save the SAML assertion:

+---
mtwilson-api getSamlForHost 192.168.1.100 > 192.168.1.100.saml
+---

    And you can verify a saved SAML assertion:

+---
mtwilson-api verifyTrustAssertion < 192.168.1.100.saml
+---
 

