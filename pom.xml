<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.intel.dcsg.cpg</groupId>
  <artifactId>cpg</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>cpg</name>
  
  <description>
  Cloud Platform Group (CPG) Java Library is a collection of Java components that may be useful in applications.
      Each component, or module, has its own version number assigned. It is not related to the version number
      of this top-level module "parent". 
  </description>
  
  <!--
      Version number of this "parent" module should only change when this POM is changed, for example with 
      new settings that will apply to all components.
      
      If you have updated this POM and need to update its version number, use the command below to automatically
      update the corresponding parent version number in all components (otherwise they will continue to use
      rules from the previous version):

      mvn release:update-versions
      
      Do NOT use -DautoVersionSubmodules=true  as in the following command, unless you want to set the version of all
      submodules/components to the same version you specify for this POM, for example if you are releasing a 2.0 or 2.1
      release and want all components to match, for the sake of making it easy to identify components that "go together".
      
      mvn release:update-versions -DautoVersionSubmodules=true
      
      This re-version command will NOT modify the version number of any components that specify their own version
      explicitly.  It would only modify the version number of components that inherit the parent's version by
      omitting their own version tag.
  -->
  
  <modules>
    <module>cpg-performance</module>
    <module>cpg-validation</module>
    <module>cpg-io</module>
    <module>cpg-crypto</module>
    <module>cpg-net</module>
    <module>cpg-tls-policy</module>
    <module>cpg-jpa</module>
    <module>cpg-console</module>
  </modules>
<!--
  <url>http://cloudsecurityportal.intel.com/redmine/projects/myh</url>
  -->
    <organization>
        <name>Cloud Platform Group</name>
        <url>http://10.1.71.63/drupal</url>
    </organization>

  <scm>
    <connection>scm:git:ssh://git@10.1.71.63/var/git/cpg</connection>
    <developerConnection>scm:git:ssh://git@10.1.71.63/var/git/cpg</developerConnection>
   <!-- <url>http://cloudsecurityportal.intel.com/redmine/projects/myh/files</url> -->
  </scm>
  
<licenses>
  <license>
    <name>Copyright 2013 Intel Corporation. All rights reserved.</name>
    <!-- fill this in when we have a URL for the project license <url>http://intel.com</url> -->
    <distribution>manual</distribution>
    <comments>Currently available only by agreement.</comments>
  </license>
</licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jersey-version>1.9-ea04</jersey-version>
    <maven.build.timestamp.format>yyyyMMdd.HHmm</maven.build.timestamp.format>
  </properties>

  <distributionManagement>
      <repository>
	  <id>cpg-maven-repository</id>
	  <url>dav://10.1.71.63/maven/repository</url>
          <name>Cloud Platform Group's Maven Repository</name>
      </repository>
      <site>
          <id>cpg-website</id>
          <url>dav://10.1.71.63/maven/site/cpg</url>
          <name>Cloud Platform Group Documentation Site</name>
      </site>
  </distributionManagement>

  <repositories>
	<repository>
		<id>cpg-x</id>
		<name>Cloud Platform Group</name>
		<url>http://10.1.71.63/maven/repository</url>
		<layout>default</layout>
                <snapshots>
                  <enabled>true</enabled>
                </snapshots>
        </repository>

		<repository>
		<id>cloudsecurityportal.intel.com</id>
		<name>Cloud Security - Intel Architecture Systems Integration</name>
		<url>http://cloudsecurityportal.intel.com/maven</url>
		<layout>default</layout>
                <snapshots>
                  <enabled>true</enabled>
                </snapshots>
        </repository>

	<repository>
		<id>glassfish.java.net</id>
		<name>GlassFish Maven Repository</name>
		<url>http://download.java.net/maven/glassfish</url>
		<layout>default</layout>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
        </repository>
	<repository>
		<id>m2.java.net</id>
		<name>Java.net Maven 2 Repository</name>
		<url>http://download.java.net/maven/2</url>
		<layout>default</layout>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
	</repository>        
	<repository>
		<id>java.net</id>
		<name>java.net Maven Repository</name>
		<url>https://maven-repository.dev.java.net/nonav/repository</url>
		<layout>default</layout>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
	</repository>
	<repository>
		<id>apache</id>
		<name>apache repository</name>
		<url>http://repository.apache.org/snapshots</url>
		<layout>default</layout>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
	</repository>
   <repository>
	   <id>EclipseLink Repo</id>
	   <name>EclipseLink Repository</name>
	   <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
   </repository>
  <repository>
    <id>Sonatype-public</id>
    <name>SnakeYAML repository</name>
    <url>http://oss.sonatype.org/content/groups/public/</url>
  </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>m2.java.net</id>
            <name>Java.net Maven 2 Repository</name>
            <url>http://download.java.net/maven/2</url>
            <layout>default</layout>
        </pluginRepository>  
    </pluginRepositories>
    
  <build>
	<plugins>
            
                <!-- begin website plugin -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.2</version>
        <configuration>
            <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.5.1</version>
              <configuration>
                <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
              </configuration>
              <reports>
                <report>dependencies</report>
                <report>dependency-info</report>
                <report>help</report>
                <report>index</report>
                <report>license</report>
                <report>issue-tracking</report>
                <report>summary</report>
              </reports>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.8.1</version>
                <configuration>
                  <show>public</show>
                  <!--<stylesheetfile>src/main/resources/css/javadoc.css</stylesheetfile>-->
                </configuration>
                <!--
                <dependencies>
                    <dependency>
                        <groupId>com.intel</groupId>
                        <artifactId>maven-intel-skin</artifactId>
                        <version>0.1-SNAPSHOT</version>
                    </dependency>
                </dependencies>
                -->
            </plugin>                
            </reportPlugins>
        </configuration>  
    </plugin>
                <!-- end website plugin -->
	</plugins>

	<extensions>
	    <extension>
		<groupId>org.apache.maven.wagon</groupId>
		<artifactId>wagon-webdav-jackrabbit</artifactId>
		<version>2.2</version>
	    </extension>
	</extensions>
        
        <pluginManagement>
            <plugins>
                
                
                <!-- specify version of maven-compiler-plugin, do not skip tests (use -DskipTests=true on command line to skip tests) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <skip>false</skip>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
                
            <!-- Specify version of maven-jar-plugin and default MANIFEST.MF entries. The variables are evaluated by the project that is being built, not by this parent pom. Also they are automatically picked up by the maven-shade-plugin -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <configuration>
                <archive>
                    <manifestEntries>
                      <Release>${project.version}</Release>
                      <!-- <Build-Number>${svn.revision}</Build-Number>  TODO  need a revision id from git or move this to integrated build server that will generate its own numbers -->
                    </manifestEntries>
                </archive>
            </configuration>
        </plugin>
                
      <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2</version>
      </plugin>

      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.14.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
      </plugin>
      
	<plugin>
            <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-dependency-plugin</artifactId>
	    <version>2.7</version>
        </plugin>
              
    <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
    </plugin>
    
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.8</version>
        </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
      </plugin>
                                                                      
            </plugins>     
        </pluginManagement>

        
  </build>
  
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.9</version>
            </dependency>    
            
              
                  
    <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>5.1.22</version>
    </dependency>
      <dependency>
		<groupId>postgresql</groupId>
		<artifactId>postgresql</artifactId>
                <version>9.1-901.jdbc4</version>
	</dependency>

    <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>        
        </dependencies>
    </dependencyManagement>  
  
</project>

